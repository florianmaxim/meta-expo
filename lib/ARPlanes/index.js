var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _possibleConstructorReturn2=_interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2=_interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _assertThisInitialized2=_interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));var _inherits2=_interopRequireDefault(require("@babel/runtime/helpers/inherits"));var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _expo=require("expo");var _expoThree=require("expo-three");var ARFrameAttribute=_expo.AR.FrameAttribute||_expo.AR.FrameAttributes;var DEFAULT_MATERIAL=new _expoThree.THREE.MeshBasicMaterial({color:16711680,wireframe:true});var Planes=function(_THREE$Object3D){(0,_inherits2.default)(Planes,_THREE$Object3D);function Planes(props){var _this;(0,_classCallCheck2.default)(this,Planes);_this=(0,_possibleConstructorReturn2.default)(this,(0,_getPrototypeOf2.default)(Planes).call(this,props));(0,_defineProperty2.default)((0,_assertThisInitialized2.default)(_this),"update",function(){var _AR$getCurrentFrame=_expo.AR.getCurrentFrame((0,_defineProperty2.default)({},ARFrameAttribute.Anchors,{})),anchors=_AR$getCurrentFrame.anchors;var planes=anchors.filter(function(_ref){var type=_ref.type;return type===_expo.AR.AnchorType.Plane});_this.data=planes});_this.material=props&&props.material?props.material:DEFAULT_MATERIAL;_this.common={};_this._data={};_this.segments=32;_this.defaultRotationX=-Math.PI*0.5;return _this}(0,_createClass2.default)(Planes,[{key:"data",get:function get(){return this._data},set:function set(planes){this._data=planes;var nextPlanes={};for(var _iterator=planes,_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol==="function"?Symbol.iterator:"@@iterator"]();;){var _ref2;if(_isArray){if(_i>=_iterator.length)break;_ref2=_iterator[_i++]}else{_i=_iterator.next();if(_i.done)break;_ref2=_i.value}var _plane=_ref2;var center=_plane.center,_plane$extent=_plane.extent,width=_plane$extent.width,length=_plane$extent.length,transform=_plane.transform,id=_plane.id;var object=this.common[id];nextPlanes[id]=object;this.common[id]=null;if(!object){var geometry=new _expoThree.THREE.PlaneGeometry(width,length,this.segments,this.segments);var planeMesh=new _expoThree.THREE.Mesh(geometry,this.material);planeMesh.rotation.x=this.defaultRotationX;object=new _expoThree.THREE.Object3D;object.planeMesh=planeMesh;object.add(planeMesh);nextPlanes[id]=object;this.add(object)}else{object.planeMesh.geometry.width=width;object.planeMesh.geometry.height=length}object.planeMesh.position.x=center.x;object.planeMesh.position.z=center.z;object.matrix.fromArray(transform);object.matrix.decompose(object.position,object.quaternion,object.scale)}for(var key in this.common){this.remove(this.common[key])}this.common=nextPlanes}}]);return Planes}(_expoThree.THREE.Object3D);var _default=Planes;exports.default=_default;